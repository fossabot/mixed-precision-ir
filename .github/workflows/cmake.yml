name: CMake

on:
  push:
    branches: [ dev, integration, main ]
  pull_request:
    branches: [ integration, main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    # runs-on: ubuntu-latest
    name: "Run for ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        #os: [ windows-latest, macos-latest, ubuntu-latest ] 
        include:
          - os: windows-latest
            toolset: msvc
            version: 2022
          - os: ubuntu-22.04 # need to set explicity os version
            toolset: gcc
            version: 22.04   # the reason why you need to set os version
          - os: macos-11
            toolset: clang
            version: 11

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Install BOOST
        uses: MarkusJx/install-boost@v2.4.3
        id: install-boost
        with:
          boost_version: 1.79.0
          platform_version: ${{matrix.version}}
          toolset: ${{matrix.toolset}}

      - name: Pull and update submodules
        run: |
          git submodule update --init --recursive
          git submodule update --remote --recursive

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        # turn off CI build targets of Universal submodule
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_DEMONSTRATION=OFF

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.  
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        #run: ctest -V -C ${{env.BUILD_TYPE}}
        run: ctest -C ${{env.BUILD_TYPE}}
      
